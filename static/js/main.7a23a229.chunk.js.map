{"version":3,"sources":["const.ts","state/action-types/index.ts","utils.ts","state/action-creators/index.ts","state/reducers/hotels.ts","state/reducers/city.ts","state/reducers/user.ts","state/reducers/index.ts","hooks/useActions.ts","hooks/useTypesSelector.ts","components/OfferCard/OfferCard.tsx","components/OfferList/OfferList.tsx","components/Map/Map.tsx","components/CityTabs/CityTabs.tsx","components/SortingItem/SortingItem.tsx","components/SortingOptions/SortingOptions.tsx","components/MainEmpty/MainEmpty.tsx","selectors/type-selector.tsx","components/Main/Main.tsx","components/Login/Login.tsx","components/FavoriteCard/FavoriteCard.tsx","components/FavoriteOfferList/FavoriteOfferList.tsx","components/FavoritesEmpty/FavoritesEmpty.tsx","components/Favorites/Favorites.tsx","components/OfferImage/OfferImage.tsx","components/NewComment/NewComment.tsx","components/Review/Review.tsx","components/ReviewsList/ReviewsList.tsx","components/Room/Room.tsx","components/App/App.tsx","index.tsx","api.ts"],"names":["Months","sortTypeList","AppRoute","ActionTypes","cities","calculateRating","rating","Math","round","fetchHotels","dispatch","_getState","api","get","then","data","type","LOAD_HOTELS","payload","catch","fetchReviews","id","_dispatch","fetchNearbyHotels","fetchFavoriteHotels","checkAuthAction","setUserName","email","changeAuthStatus","authAction","password","post","postReview","comment","updateFavoriteStatus","hotel","Number","is_favorite","updateHotels","getState","_api","updatedHotelList","hotels","updatedHotel","hotelIndex","findIndex","slice","concat","length","updateHotelsList","UPDATE_HOTELS","changeCity","CHANGE_CITY","changeSortType","sortName","CHANGE_SORT_TYPE","changeActiveOffer","CHANGE_ACTIVE_OFFER","status","CHANGE_AUTH_STATUS","userName","SET_USER_NAME","initialState","sortType","activeOffer","city","reducers","combineReducers","state","action","Object","assign","currentCity","user","useActions","useDispatch","bindActionCreators","actionCreators","useTypedSelector","useSelector","OfferCard","className","onHoverHandler","isFavorite","preview_image","title","price","history","useHistory","onBookmarkClick","React","useCallback","push","onMouseEnter","to","src","width","height","alt","onClick","xlinkHref","style","memo","OfferList","classNameMainPage","classNameOfferPlace","map","i","Map","latitude","longitude","zoom","useState","mapState","setMap","pinsGroup","setPinsGroup","pin","leaflet","icon","iconUrl","iconSize","activePin","renderMarkers","markers","forEach","offerCords","location","marker","bindPopup","markersGroup","layerGroup","addTo","useEffect","center","zoomControl","setView","tileLayer","attribution","initialMap","clearLayers","CityTabs","onTabCityClick","href","SortingItem","isActive","itemName","onTypeSortClick","tabIndex","arrSortTypeList","values","SortingOptions","changeType","evt","selectedSortType","currentTarget","textContent","method","sortOption","MainEmpty","getSortedHotels","createSelector","filteredHotels","filter","name","POPULAR","PRICE_HIGH_TO_LOW","sort","a","b","PRICE_LOW_TO_HIGH","TOP_RATED_FIRST","Main","selectedCity","text","Login","setUser","setPassword","onSubmit","preventDefault","onChange","e","value","placeholder","required","FavoriteCard","props","FavoriteOfferList","filteredOffers","filterOffersByCity","FavoritesEmpty","Favorites","favoriteOffers","SetFavoriteOffers","onCityClick","favoriteCities","favoriteHotels","Set","add","Array","from","getUniqueArrayCities","OfferImage","image","ratingTitles","NewComment","updateComments","setRating","setComment","formRef","createRef","ratingArr","fill","onChangeRating","onChangeText","onSubmitForm","form","current","reset","ref","htmlFor","_item","array","Fragment","disabled","Review","review","avatar_url","dateTime","String","date","formattedDate","Date","parse","year","getFullYear","month","getMonth","getDate","ReviewsList","reviews","quantityReviews","Room","setHotel","setReviews","nearbyHotels","setNearbyHotels","sortReviews","reviewsList","window","scrollTo","find","sortedReviews","comments","images","is_premium","bedrooms","max_adults","goods","description","host","is_pro","offerImages","good","App","loadingFlag","setLoadingFlag","Promise","all","exact","path","render","offerProps","match","params","root","document","querySelector","onUnauthorized","axios","create","baseURL","timeout","withCredentials","interceptors","response","use","err","createApi","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","ReactDOM"],"mappings":"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","file":"static/js/main.7a23a229.chunk.js","sourcesContent":["export const AppRoute = {\n  ROOT: `/`,\n  OFFER: `/offer`,\n  LOGIN: `/login`,\n  FAVORITES: `/favorites`,\n};\n\nexport enum Months {\n  January,\n  February,\n  March,\n  April,\n  May,\n  June,\n  July,\n  August,\n  September,\n  October,\n  November,\n  December,\n}\n\nexport enum sortTypeList {\n  POPULAR = `Popular`,\n  PRICE_LOW_TO_HIGH = `Price: low to high`,\n  PRICE_HIGH_TO_LOW = `Price: high to low`,\n  TOP_RATED_FIRST = `Top rated first`,\n}\n\nexport const cities = [\n  `Paris`,\n  `Cologne`,\n  `Brussels`,\n  `Amsterdam`,\n  `Hamburg`,\n  `Dusseldorf`,\n];\n","export enum ActionTypes {\n  LOAD_HOTELS = `load_hotels`,\n  CHANGE_CITY = `change_city`,\n  CHANGE_SORT_TYPE = `change_sort_type`,\n  CHANGE_ACTIVE_OFFER = `change_active_offer`,\n  CHANGE_AUTH_STATUS = `change_auth_status`,\n  SET_USER_NAME = `set_user_name`,\n  UPDATE_HOTELS = `update_hotels`\n}\n","import { sortTypeList } from \"./const\";\nimport { Hotel } from \"./types\";\n\nexport const calculateRating = (rating: number): number => {\n  const roundedRating = Math.round(rating);\n\n  switch (roundedRating) {\n    case 5:\n      return 100;\n    case 4:\n      return 80;\n    case 3:\n      return 60;\n    case 2:\n      return 40;\n    case 1:\n      return 20;\n    default:\n      return 0;\n  }\n};\n\nexport const getUniqueArrayCities = (favoriteHotels: Hotel[]): string[] => {\n  const cities: Set<string> = new Set();\n  favoriteHotels.forEach(\n    (hotel: Hotel): Set<string> => cities.add(hotel.city.name)\n  );\n  return Array.from(cities);\n};\n\nexport const sortingHotels = (\n  hotels: Hotel[],\n  sortName: string,\n  city: string\n) => {\n  const filteredHotels = hotels.filter(\n    (hotel: Hotel): boolean => hotel.city.name === city\n  );\n\n  switch (sortName) {\n    case sortTypeList.POPULAR:\n      return filteredHotels;\n    case sortTypeList.PRICE_HIGH_TO_LOW:\n      return filteredHotels\n        .sort((a: Hotel, b: Hotel) => b.price - a.price)\n        .slice();\n    case sortTypeList.PRICE_LOW_TO_HIGH:\n      return filteredHotels\n        .sort((a: Hotel, b: Hotel) => a.price - b.price)\n        .slice();\n    case sortTypeList.TOP_RATED_FIRST:\n      return filteredHotels\n        .sort((a: Hotel, b: Hotel) => b.rating - a.rating)\n        .slice();\n    default:\n      return filteredHotels;\n  }\n};\n\nexport const updateHotelsList = (\n  hotels: Hotel[],\n  updatedHotel: Hotel\n): Hotel[] => {\n  const hotelIndex = hotels.findIndex(\n    (hotel: Hotel) => hotel.id === updatedHotel.id\n  );\n\n  return hotels\n    .slice(0, hotelIndex)\n    .concat(updatedHotel)\n    .concat(hotels.slice(hotelIndex + 1, hotels.length));\n};\n","import { Dispatch } from \"redux\";\nimport { AxiosInstance, AxiosResponse } from \"axios\";\nimport { Action } from \"../actions\";\nimport { ActionTypes } from \"../action-types\";\nimport { Hotel, Reviews, User } from \"../../types\";\nimport { RootState } from \"../reducers\";\nimport { updateHotelsList } from \"../../utils\";\n\nexport const fetchHotels = () => (\n  dispatch: Dispatch<Action>,\n  _getState: () => {},\n  api: AxiosInstance\n): Promise<void> =>\n  api\n    .get(`/hotels`)\n    .then(({ data }: { data: Hotel[] }) => {\n      dispatch({\n        type: ActionTypes.LOAD_HOTELS,\n        payload: data,\n      });\n    })\n    .catch(() => {\n      dispatch({\n        type: ActionTypes.LOAD_HOTELS,\n        payload: [],\n      });\n    });\n\nexport const fetchReviews = (id: string) => (\n  _dispatch: Dispatch,\n  _getState: () => {},\n  api: AxiosInstance\n): Promise<AxiosResponse<Reviews[]>> => api.get(`/comments/${id}`);\n\nexport const fetchNearbyHotels = (id: string) => (\n  _dispatch: Dispatch,\n  _getState: () => {},\n  api: AxiosInstance\n): Promise<AxiosResponse> => api.get(`/hotels/${id}/nearby`);\n\nexport const fetchFavoriteHotels = () => (\n  _dispatch: Dispatch,\n  _getState: () => {},\n  api: AxiosInstance\n): Promise<AxiosResponse<Hotel[]>> => api.get(`/favorite`);\n\nexport const checkAuthAction = () => (\n  dispatch: Dispatch,\n  _getState: RootState,\n  api: AxiosInstance\n): void => {\n  api.get(`/login`).then(({ data }: { data: User }) => {\n    dispatch(setUserName(data.email));\n    dispatch(changeAuthStatus(`AUTH`));\n  });\n};\n\nexport const authAction = (email: string, password: string) => (\n  dispatch: Dispatch,\n  _getState: RootState,\n  api: AxiosInstance\n): Promise<void> =>\n  api.post(`/login`, { email, password }).then(() => {\n    dispatch(changeAuthStatus(`AUTH`));\n    dispatch(setUserName(email));\n  });\n\nexport const postReview = (comment: string, rating: number, id: string) => (\n  _dispatch: Dispatch,\n  _getState: RootState,\n  api: AxiosInstance\n) => api.post(`/comments/${id}`, { comment, rating });\n\nexport const updateFavoriteStatus = (hotel: Hotel) => (\n  _dispatch: Dispatch,\n  _getState: () => RootState,\n  api: AxiosInstance\n) => {\n  return api.post(`/favorite/${hotel.id}/${Number(hotel.is_favorite)}`);\n};\n\nexport const updateHotels = (hotel: Hotel) => (\n  dispatch: Dispatch,\n  getState: () => RootState,\n  _api: AxiosInstance\n) => {\n  const { hotels } = getState().hotels;\n\n  const updatedHotelList = updateHotelsList(hotels, hotel);\n\n  dispatch({\n    type: ActionTypes.UPDATE_HOTELS,\n    payload: updatedHotelList,\n  });\n};\n\nexport const changeCity = (data: string) => ({\n  type: ActionTypes.CHANGE_CITY,\n  payload: data,\n});\n\nexport const changeSortType = (sortName: string) => ({\n  type: ActionTypes.CHANGE_SORT_TYPE,\n  payload: sortName,\n});\n\nexport const changeActiveOffer = (hotel: Hotel) => ({\n  type: ActionTypes.CHANGE_ACTIVE_OFFER,\n  payload: hotel,\n});\n\nexport const changeAuthStatus = (status: string) => ({\n  type: ActionTypes.CHANGE_AUTH_STATUS,\n  payload: status,\n});\n\nexport const setUserName = (userName: string) => ({\n  type: ActionTypes.SET_USER_NAME,\n  payload: userName,\n});\n","import { ActionTypes } from \"../action-types\";\nimport { Action } from \"../actions\";\nimport { Hotel } from \"../../types\";\n\nconst defaultSortType = `Popular`;\n\ninterface HotelsState {\n  hotels: Hotel[];\n  sortType: string;\n  activeOffer: Hotel | {};\n}\n\nconst initialState = {\n  hotels: [],\n  sortType: defaultSortType,\n  activeOffer: {},\n};\n\nexport const hotelsReducer = (\n  state: HotelsState = initialState,\n  action: Action\n): HotelsState => {\n  switch (action.type) {\n    case ActionTypes.LOAD_HOTELS:\n      return Object.assign({}, state, { hotels: action.payload });\n    case ActionTypes.CHANGE_SORT_TYPE:\n      return Object.assign({}, state, { sortType: action.payload });\n    case ActionTypes.CHANGE_ACTIVE_OFFER:\n      return Object.assign({}, state, { activeOffer: action.payload });\n    case ActionTypes.UPDATE_HOTELS:\n      return Object.assign({}, state, { hotels: action.payload });\n    default:\n      return state;\n  }\n};\n","import { ActionTypes } from \"../action-types\";\nimport { Action } from \"../actions\";\n\ninterface cityState {\n  city: string;\n}\n\nconst initialState = {\n  city: `Amsterdam`,\n};\n\nexport const cityReducer = (\n  state: cityState = initialState,\n  action: Action\n): cityState => {\n  switch (action.type) {\n    case ActionTypes.CHANGE_CITY:\n      return { city: action.payload };\n    default:\n      return state;\n  }\n};\n","import { Action } from \"../actions\";\nimport { ActionTypes } from \"../action-types\";\n\ninterface userState {\n  status: string;\n  userName: string;\n}\n\nconst initialState = {\n  status: `NO_AUTH`,\n  userName: ``,\n};\n\nexport const userReducer = (\n  state: userState = initialState,\n  action: Action\n): userState => {\n  switch (action.type) {\n    case ActionTypes.CHANGE_AUTH_STATUS:\n      return Object.assign({}, state, { status: action.payload });\n    case ActionTypes.SET_USER_NAME:\n      return Object.assign({}, state, { userName: action.payload });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { hotelsReducer } from \"./hotels\";\nimport { cityReducer } from \"./city\";\nimport { userReducer } from \"./user\";\n\nconst reducers = combineReducers({\n  hotels: hotelsReducer,\n  currentCity: cityReducer,\n  user: userReducer,\n});\n\nexport default reducers;\nexport type RootState = ReturnType<typeof reducers>;\n","import { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators } from \"../state\";\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n\n  return bindActionCreators(actionCreators, dispatch);\n};\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { RootState } from \"../state\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Hotel } from \"../../types\";\nimport { calculateRating } from \"../../utils\";\nimport { AppRoute } from \"../../const\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { useTypedSelector } from \"../../hooks/useTypesSelector\";\n\ninterface OfferCardProps {\n  hotel: Hotel;\n  onHoverHandler?: (hotel: Hotel) => void; // Исправить\n  className: string;\n  isFavorite: boolean;\n}\n\ninterface OfferCardActions {\n  updateFavoriteStatus: Function;\n  updateHotels: Function;\n}\n\nconst OfferCard = ({\n  hotel,\n  className,\n  onHoverHandler,\n  isFavorite,\n}: OfferCardProps): JSX.Element => {\n  const { preview_image, title, price, rating, type } = hotel;\n  const {\n    updateFavoriteStatus,\n    updateHotels,\n  }: OfferCardActions = useActions();\n  const { status } = useTypedSelector((state) => state.user);\n  const history = useHistory();\n\n  const onBookmarkClick = React.useCallback((hotel: Hotel) => {\n    if (status === `AUTH`) {\n      hotel.is_favorite = !hotel.is_favorite;\n      updateFavoriteStatus(hotel).then(({ data }: { data: Hotel }) =>\n        updateHotels(data)\n      );\n    } else {\n      history.push(`/login`);\n    }\n  }, []);\n\n  return (\n    <article\n      className={className}\n      onMouseEnter={() => onHoverHandler && onHoverHandler(hotel)} // Исправить\n    >\n      <div className=\"cities__image-wrapper place-card__image-wrapper\">\n        <Link to={`${AppRoute.OFFER}/${hotel.id}`}>\n          <img\n            className=\"place-card__image\"\n            src={preview_image}\n            width=\"260\"\n            height=\"200\"\n            alt={title}\n          />\n        </Link>\n      </div>\n      <div className=\"place-card__info\">\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{price}</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <button\n            className={\n              isFavorite\n                ? `place-card__bookmark-button place-card__bookmark-button--active button`\n                : `place-card__bookmark-button button`\n            }\n            type=\"button\"\n            onClick={() => onBookmarkClick(hotel)}\n          >\n            <svg className=\"place-card__bookmark-icon\" width=\"18\" height=\"19\">\n              <use xlinkHref=\"#icon-bookmark\"></use>\n            </svg>\n            <span className=\"visually-hidden\">To bookmarks</span>\n          </button>\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{ width: `${calculateRating(rating)}%` }}></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link to={`${AppRoute.OFFER}/${hotel.id}`}>{title}</Link>\n        </h2>\n        <p className=\"place-card__type\">{type}</p>\n      </div>\n    </article>\n  );\n};\n\nexport default React.memo(OfferCard);\n","import React from \"react\";\nimport OfferCard from \"../OfferCard/OfferCard\";\nimport { Hotel } from \"../../types\";\nimport { useActions } from \"../../hooks/useActions\";\n\ninterface OfferListProps {\n  hotels: Hotel[];\n  classNameMainPage: string;\n  classNameOfferPlace: string;\n}\n\ninterface OfferListActions {\n  changeActiveOffer: Function;\n}\n\nexport const OfferList = ({\n  hotels,\n  classNameMainPage,\n  classNameOfferPlace,\n}: OfferListProps) => {\n  const { changeActiveOffer }: OfferListActions = useActions();\n\n  const onHoverHandler = React.useCallback((hotel: Hotel): void => {\n    changeActiveOffer(hotel);\n  }, []);\n\n  return (\n    <div className={classNameOfferPlace}>\n      {hotels.map(\n        (hotel: Hotel, i: number): JSX.Element => (\n          <OfferCard\n            key={i}\n            hotel={hotel}\n            isFavorite={hotel.is_favorite}\n            onHoverHandler={onHoverHandler}\n            className={classNameMainPage}\n          />\n        )\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport leaflet, { LatLngExpression, LatLngTuple } from \"leaflet\";\nimport { Hotel } from \"../../types\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useTypedSelector } from \"../../hooks/useTypesSelector\";\n\ntype OwnProps = {\n  hotels: Hotel[];\n  city: {\n    latitude: number;\n    longitude: number;\n    zoom: number;\n  };\n};\n\nexport const Map = ({ hotels, city }: OwnProps): JSX.Element => {\n  const { latitude, longitude, zoom } = city;\n  const { activeOffer } = useTypedSelector((state) => state.hotels);\n  const [mapState, setMap] = useState<leaflet.Map>();\n  const [pinsGroup, setPinsGroup] = useState<leaflet.LayerGroup>();\n\n  const pin = leaflet.icon({\n    iconUrl: `img/pin.svg`,\n    iconSize: [27, 39],\n  });\n\n  const activePin = leaflet.icon({\n    iconUrl: `img/pin-active.svg`,\n    iconSize: [27, 39],\n  });\n\n  const renderMarkers = (map: leaflet.Map): void => {\n    const markers: leaflet.Marker[] = [];\n\n    hotels.forEach((hotel: Hotel): void => {\n      const offerCords: LatLngTuple = [\n        hotel.location.latitude,\n        hotel.location.longitude,\n      ];\n\n      const marker = leaflet\n        .marker(\n          offerCords,\n          hotel === activeOffer ? { icon: activePin } : { icon: pin }\n        )\n        .bindPopup(\n          `\n          <div style=\"text-align: center\">\n            ${hotel.title}<br>\n            ${hotel.type}\n          </div>\n          `\n        );\n\n      markers.push(marker);\n    });\n\n    const markersGroup = leaflet.layerGroup(markers);\n    setPinsGroup(markersGroup);\n    markersGroup.addTo(map);\n  };\n\n  const initialMap = (): void => {\n    const city: LatLngExpression = [latitude, longitude];\n\n    const map = leaflet.map(`map`, {\n      center: city,\n      zoom: zoom,\n      zoomControl: false,\n    });\n\n    setMap(map);\n\n    map.setView(city, zoom);\n\n    leaflet\n      .tileLayer(\n        `https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png`,\n        {\n          attribution: `&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>`,\n        }\n      )\n      .addTo(map);\n\n    renderMarkers(map);\n  };\n\n  React.useEffect((): void => {\n    initialMap();\n  }, []);\n\n  React.useEffect((): void => {\n    if (mapState) {\n      pinsGroup?.clearLayers();\n      mapState.setView([latitude, longitude], zoom);\n      renderMarkers(mapState);\n    }\n  }, [activeOffer, hotels]);\n\n  return <div id=\"map\" style={{ height: `100%` }} />;\n};\n","import React from \"react\";\nimport { cities } from \"../../const\";\n\ntype CityTabsProps = {\n  currentCity: string;\n  onTabCityClick: (\n    evt: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n  ) => void;\n};\n\nexport const CityTabs: React.FC<CityTabsProps> = ({\n  currentCity,\n  onTabCityClick,\n}) => {\n  return (\n    <ul className=\"locations__list tabs__list\">\n      {cities.map(\n        (city: string, i: number): JSX.Element => (\n          <li key={i} className=\"locations__item\">\n            <a\n              className={\n                city === currentCity\n                  ? `locations__item-link tabs__item tabs__item--active`\n                  : `locations__item-link tabs__item`\n              }\n              onClick={onTabCityClick}\n              href=\"#\"\n            >\n              <span>{city}</span>\n            </a>\n          </li>\n        )\n      )}\n    </ul>\n  );\n};\n","type SortingItemProps = {\n  isActive: boolean;\n  itemName: string;\n  onTypeSortClick: (evt: React.MouseEvent<HTMLLIElement, MouseEvent>) => void;\n};\n\nexport const SortingItem = ({\n  isActive,\n  itemName,\n  onTypeSortClick,\n}: SortingItemProps): JSX.Element => {\n  return (\n    <li\n      onClick={onTypeSortClick}\n      className={\n        isActive ? `places__option places__option--active` : `places__option`\n      }\n      tabIndex={0}\n    >\n      {itemName}\n    </li>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { SortingItem } from \"../SortingItem/SortingItem\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { useTypedSelector } from \"../../hooks/useTypesSelector\";\nimport { sortTypeList } from \"../../const\";\n\nconst arrSortTypeList = Object.values(sortTypeList);\n\nexport const SortingOptions: React.FC = () => {\n  const { changeSortType } = useActions();\n  const { sortType } = useTypedSelector((state) => state.hotels);\n\n  const changeType = useCallback(\n    (evt: React.MouseEvent<HTMLLIElement, MouseEvent>): void => {\n      const selectedSortType = evt.currentTarget.textContent;\n\n      if (selectedSortType) {\n        changeSortType(selectedSortType);\n      }\n    },\n    []\n  );\n\n  return (\n    <form className=\"places__sorting\" action=\"#\" method=\"get\">\n      <span className=\"places__sorting-caption\">Sort by</span>\n      <span className=\"places__sorting-type\" tabIndex={0}>\n        {sortType}\n        <svg className=\"places__sorting-arrow\" width=\"7\" height=\"4\">\n          <use xlinkHref=\"#icon-arrow-select\"></use>\n        </svg>\n      </span>\n      <ul className=\"places__options places__options--custom\">\n        {arrSortTypeList.map(\n          (sortOption: string, i: number): JSX.Element => (\n            <SortingItem\n              key={i}\n              isActive={sortType === sortOption}\n              itemName={sortOption}\n              onTypeSortClick={changeType}\n            />\n          )\n        )}\n      </ul>\n    </form>\n  );\n};\n","import { CityTabs } from \"../CityTabs/CityTabs\";\n\ntype MainEmptyProps = {\n  city: string;\n  onTabCityClick: (\n    evt: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n  ) => void;\n};\n\nexport const MainEmpty: React.FC<MainEmptyProps> = ({\n  city,\n  onTabCityClick,\n}) => {\n  return (\n    <main className=\"page__main page__main--index page__main--index-empty\">\n      <h1 className=\"visually-hidden\">Cities</h1>\n      <div className=\"tabs\">\n        <section className=\"locations container\">\n          <CityTabs currentCity={city} onTabCityClick={onTabCityClick} />\n        </section>\n      </div>\n      <div className=\"cities\">\n        <div className=\"cities__places-container cities__places-container--empty container\">\n          <section className=\"cities__no-places\">\n            <div className=\"cities__status-wrapper tabs__content\">\n              <b className=\"cities__status\">No places to stay available</b>\n              <p className=\"cities__status-description\">\n                We could not find any property available at the moment in {city}\n              </p>\n            </div>\n          </section>\n          <div className=\"cities__right-section\"></div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import { createSelector } from \"reselect\";\nimport { Hotel } from \"../types\";\nimport { sortingHotels } from \"../utils\";\nimport { RootState } from \"../state\";\n\nexport const getHotels = (state: RootState): Hotel[] => state.hotels.hotels;\nexport const getActiveType = (state: RootState): string =>\n  state.hotels.sortType;\nexport const getCity = (state: RootState): any => state.currentCity.city;\n\nexport const getSortedHotels = createSelector(\n  getHotels,\n  getActiveType,\n  getCity,\n  sortingHotels\n);\n","import { Link } from \"react-router-dom\";\nimport { OfferList } from \"../OfferList/OfferList\";\nimport { Map } from \"../Map/Map\";\nimport { CityTabs } from \"../CityTabs/CityTabs\";\nimport { SortingOptions } from \"../SortingOptions/SortingOptions\";\nimport { MainEmpty } from \"../MainEmpty/MainEmpty\";\nimport { AppRoute } from \"../../const\";\nimport { useTypedSelector } from \"../../hooks/useTypesSelector\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { useCallback } from \"react\";\nimport { getSortedHotels } from \"../../selectors/type-selector\";\n\ntype AppDispatchProps = {\n  changeCity: Function;\n};\n\nexport const Main = (): JSX.Element => {\n  const { changeCity }: AppDispatchProps = useActions();\n  const { city } = useTypedSelector((state) => state.currentCity);\n  const { status } = useTypedSelector((state) => state.user);\n  const { userName } = useTypedSelector((state) => state.user);\n  const hotels = getSortedHotels(useTypedSelector((state) => state));\n\n  const onTabCityClick = useCallback(\n    (evt: React.MouseEvent<HTMLAnchorElement, MouseEvent>): void => {\n      const selectedCity = evt.currentTarget.text;\n      if (city !== selectedCity) {\n        changeCity(selectedCity);\n      }\n    },\n    [city]\n  );\n\n  return (\n    <div className=\"page page--gray page--main\">\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <div className=\"header__left\">\n              <a className=\"header__logo-link\">\n                <img\n                  className=\"header__logo\"\n                  src=\"img/logo.svg\"\n                  alt=\"6 cities logo\"\n                  width=\"81\"\n                  height=\"41\"\n                />\n              </a>\n            </div>\n            <nav className=\"header__nav\">\n              <ul className=\"header__nav-list\">\n                <li className=\"header__nav-item user\">\n                  <Link\n                    className=\"header__nav-link header__nav-link--profile\"\n                    to={\n                      status === `NO_AUTH` ? AppRoute.LOGIN : AppRoute.FAVORITES\n                    }\n                  >\n                    <div className=\"header__avatar-wrapper user__avatar-wrapper\"></div>\n                    {status === `NO_AUTH` ? (\n                      <span className=\"header__login\">Sign in</span>\n                    ) : (\n                      <span className=\"header__user-name user__name\">\n                        {userName}\n                      </span>\n                    )}\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </header>\n\n      {hotels.length === 0 ? (\n        <MainEmpty city={city} onTabCityClick={onTabCityClick} />\n      ) : (\n        <main className=\"page__main page__main--index\">\n          <h1 className=\"visually-hidden\">Cities</h1>\n          <div className=\"tabs\">\n            <section className=\"locations container\">\n              <CityTabs currentCity={city} onTabCityClick={onTabCityClick} />\n            </section>\n          </div>\n          <div className=\"cities\">\n            <div className=\"cities__places-container container\">\n              <section className=\"cities__places places\">\n                <h2 className=\"visually-hidden\">Places</h2>\n                <b className=\"places__found\">\n                  {hotels.length} places to stay in {city}\n                </b>\n                <SortingOptions />\n                <OfferList\n                  hotels={hotels}\n                  classNameMainPage={`cities__place-card place-card`}\n                  classNameOfferPlace={`cities__places-list places__list tabs__content`}\n                />\n              </section>\n              <div className=\"cities__right-section\">\n                <section className=\"cities__map map\">\n                  {hotels.length > 0 && (\n                    <Map hotels={hotels} city={hotels[0].city.location} />\n                  )}\n                </section>\n              </div>\n            </div>\n          </div>\n        </main>\n      )}\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { AppRoute } from \"../../const\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { useTypedSelector } from \"../../hooks/useTypesSelector\";\n\nexport const Login = (): JSX.Element => {\n  const [user, setUser] = useState<string>();\n  const [password, setPassword] = useState<string>();\n  const { authAction } = useActions();\n  const { status } = useTypedSelector((state) => state.user);\n\n  const sendUserData = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    if (user && password) authAction(user, password);\n  };\n\n  if (status === `AUTH`) {\n    return <Redirect to={AppRoute.ROOT} />;\n  }\n\n  return (\n    <div className=\"page page--gray page--login\">\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <div className=\"header__left\">\n              <Link className=\"header__logo-link\" to={AppRoute.ROOT}>\n                <img\n                  className=\"header__logo\"\n                  src=\"img/logo.svg\"\n                  alt=\"6 cities logo\"\n                  width=\"81\"\n                  height=\"41\"\n                />\n              </Link>\n            </div>\n            <nav className=\"header__nav\">\n              <ul className=\"header__nav-list\">\n                <li className=\"header__nav-item user\">\n                  <a className=\"header__nav-link header__nav-link--profile\">\n                    <div className=\"header__avatar-wrapper user__avatar-wrapper\"></div>\n                    <span className=\"header__login\">Sign in</span>\n                  </a>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"page__main page__main--login\">\n        <div className=\"page__login-container container\">\n          <section className=\"login\">\n            <h1 className=\"login__title\">Sign in</h1>\n            <form\n              className=\"login__form form\"\n              action=\"#\"\n              method=\"post\"\n              onSubmit={sendUserData}\n            >\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">E-mail</label>\n                <input\n                  onChange={(e) => setUser(e.currentTarget.value)}\n                  className=\"login__input form__input\"\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  required={true}\n                />\n              </div>\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">Password</label>\n                <input\n                  onChange={(e) => setPassword(e.currentTarget.value)}\n                  className=\"login__input form__input\"\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  required={true}\n                />\n              </div>\n              <button\n                className=\"login__submit form__submit button\"\n                type=\"submit\"\n              >\n                Sign in\n              </button>\n            </form>\n          </section>\n          <section className=\"locations locations--login locations--current\">\n            <div className=\"locations__item\">\n              <Link className=\"locations__item-link\" to={AppRoute.ROOT}>\n                <span>Amsterdam</span>\n              </Link>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { calculateRating } from \"../../utils\";\nimport { Hotel } from \"../../types/index\";\nimport { Link } from \"react-router-dom\";\nimport { AppRoute } from \"../../const\";\nimport React from \"react\";\nimport { useActions } from \"../../hooks/useActions\";\n\ninterface OwnProps {\n  hotel: Hotel;\n}\n\ninterface FavoriteCardActions {\n  updateFavoriteStatus: Function;\n  updateHotels: Function;\n}\n\nexport const FavoriteCard = (props: OwnProps): JSX.Element => {\n  const { hotel } = props;\n  const { title, price, is_favorite, rating, type, preview_image, id } = hotel;\n\n  const {\n    updateFavoriteStatus,\n    updateHotels,\n  }: FavoriteCardActions = useActions();\n\n  const onBookmarkClick = React.useCallback((hotel: Hotel) => {\n    hotel.is_favorite = !hotel.is_favorite;\n\n    updateFavoriteStatus(hotel).then(({ data }: { data: Hotel }) =>\n      updateHotels(data)\n    );\n  }, []);\n\n  return (\n    <article className=\"favorites__card place-card\">\n      <div className=\"favorites__image-wrapper place-card__image-wrapper\">\n        <Link to={`${AppRoute.OFFER}/${id}`}>\n          <img\n            className=\"place-card__image\"\n            src={preview_image}\n            width=\"150\"\n            height=\"110\"\n            alt={title}\n          />\n        </Link>\n      </div>\n      <div className=\"favorites__card-info place-card__info\">\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{price}</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <button\n            onClick={() => onBookmarkClick(hotel)}\n            className={\n              is_favorite\n                ? `place-card__bookmark-button place-card__bookmark-button--active button`\n                : `place-card__bookmark-button button`\n            }\n            type=\"button\"\n          >\n            <svg className=\"place-card__bookmark-icon\" width=\"18\" height=\"19\">\n              <use xlinkHref=\"#icon-bookmark\"></use>\n            </svg>\n            <span className=\"visually-hidden\">In bookmarks</span>\n          </button>\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{ width: `${calculateRating(rating)}%` }}></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link to={`${AppRoute.OFFER}/${id}`}>{title}</Link>\n        </h2>\n        <p className=\"place-card__type\">{type}</p>\n      </div>\n    </article>\n  );\n};\n","import { Hotel } from \"../../types/index\";\nimport { FavoriteCard } from \"../FavoriteCard/FavoriteCard\";\n\ninterface OwnProps {\n  hotels: Hotel[];\n  city: string;\n}\n\nexport const FavoriteOfferList = ({ hotels, city }: OwnProps): JSX.Element => {\n  const filterOffersByCity = (hotels: Hotel[]): Hotel[] => {\n    return hotels.filter((hotel: Hotel): boolean => hotel.city.name === city);\n  };\n\n  const filteredOffers = filterOffersByCity(hotels);\n\n  return (\n    <>\n      {filteredOffers.map(\n        (hotel: Hotel, i: number): JSX.Element => (\n          <FavoriteCard key={i} hotel={hotel} />\n        )\n      )}\n    </>\n  );\n};\n","export const FavoritesEmpty: React.FC = () => {\n  return (\n    <main className=\"page__main page__main--favorites page__main--favorites-empty\">\n      <div className=\"page__favorites-container container\">\n        <section className=\"favorites favorites--empty\">\n          <h1 className=\"visually-hidden\">Favorites (empty)</h1>\n          <div className=\"favorites__status-wrapper\">\n            <b className=\"favorites__status\">Nothing yet saved.</b>\n            <p className=\"favorites__status-description\">\n              Save properties to narrow down search or plan your future trips.\n            </p>\n          </div>\n        </section>\n      </div>\n    </main>\n  );\n};\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Hotel } from \"../../types/index\";\nimport { FavoriteOfferList } from \"../FavoriteOfferList/FavoriteOfferList\";\nimport { AppRoute } from \"../../const\";\nimport { getUniqueArrayCities } from \"../../utils\";\nimport { FavoritesEmpty } from \"../FavoritesEmpty/FavoritesEmpty\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { useTypedSelector } from \"../../hooks/useTypesSelector\";\n\ntype FavoritesDispatchProps = {\n  fetchFavoriteHotels: Function;\n};\n\nexport const Favorites = (): JSX.Element => {\n  const { changeCity } = useActions();\n  const { fetchFavoriteHotels }: FavoritesDispatchProps = useActions();\n  const { status, userName } = useTypedSelector((state) => state.user);\n  const { hotels } = useTypedSelector((state) => state.hotels);\n  const [favoriteOffers, SetFavoriteOffers] = React.useState<[] | Hotel[]>([]);\n\n  React.useEffect((): void => {\n    fetchFavoriteHotels().then(({ data }: { data: Hotel[] }) => {\n      SetFavoriteOffers(data);\n    });\n  }, [hotels]);\n\n  const onCityClick = React.useCallback(\n    (evt: React.MouseEvent<HTMLDivElement, MouseEvent>): void => {\n      const selectedCity = evt.currentTarget.textContent;\n      if (selectedCity) changeCity(selectedCity);\n    },\n    []\n  );\n\n  const favoriteCities = getUniqueArrayCities(favoriteOffers);\n\n  if (status === `NO_AUTH`) {\n    return <Redirect to={AppRoute.LOGIN} />;\n  }\n\n  return (\n    <div className=\"page\">\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <div className=\"header__left\">\n              <Link className=\"header__logo-link\" to={AppRoute.ROOT}>\n                <img\n                  className=\"header__logo\"\n                  src=\"img/logo.svg\"\n                  alt=\"6 cities logo\"\n                  width=\"81\"\n                  height=\"41\"\n                />\n              </Link>\n            </div>\n            <nav className=\"header__nav\">\n              <ul className=\"header__nav-list\">\n                <li className=\"header__nav-item user\">\n                  <Link\n                    className=\"header__nav-link header__nav-link--profile\"\n                    to={AppRoute.FAVORITES}\n                  >\n                    <div className=\"header__avatar-wrapper user__avatar-wrapper\"></div>\n                    <span className=\"header__user-name user__name\">\n                      {userName}\n                    </span>\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </header>\n\n      {favoriteCities.length === 0 ? (\n        <FavoritesEmpty />\n      ) : (\n        <main className=\"page__main page__main--favorites\">\n          <div className=\"page__favorites-container container\">\n            <section className=\"favorites\">\n              <h1 className=\"favorites__title\">Saved listing</h1>\n              <ul className=\"favorites__list\">\n                {favoriteCities.map(\n                  (city: string, i: number): JSX.Element => (\n                    <li key={i} className=\"favorites__locations-items\">\n                      <div className=\"favorites__locations locations locations--current\">\n                        <div className=\"locations__item\" onClick={onCityClick}>\n                          <Link\n                            className=\"locations__item-link\"\n                            to={AppRoute.ROOT}\n                          >\n                            <span>{city}</span>\n                          </Link>\n                        </div>\n                      </div>\n                      <div className=\"favorites__places\">\n                        <FavoriteOfferList\n                          key={i}\n                          hotels={favoriteOffers}\n                          city={city}\n                        />\n                      </div>\n                    </li>\n                  )\n                )}\n              </ul>\n            </section>\n          </div>\n        </main>\n      )}\n      <footer className=\"footer container\">\n        <Link className=\"footer__logo-link\" to={AppRoute.ROOT}>\n          <img\n            className=\"footer__logo\"\n            src=\"img/logo.svg\"\n            alt=\"6 cities logo\"\n            width=\"64\"\n            height=\"33\"\n          />\n        </Link>\n      </footer>\n    </div>\n  );\n};\n","type OwnProps = {\n  image: string;\n  title: string;\n};\n\nexport const OfferImage = ({ image, title }: OwnProps) => {\n  return (\n    <div className=\"property__image-wrapper\">\n      <img className=\"property__image\" src={image} alt={title} />\n    </div>\n  );\n};\n","import React, { createRef } from \"react\";\nimport { useActions } from \"../../hooks/useActions\";\n\nconst ratingTitles = new Map([\n  [1, `terribly`],\n  [2, `badly`],\n  [3, `not bad`],\n  [4, `good`],\n  [5, `perfect`],\n]);\n\ntype NewCommentProps = {\n  id: string;\n  updateComments: Function;\n};\n\ntype NewCommentDispatchProps = {\n  postReview: Function;\n};\n\nexport const NewComment = ({\n  id,\n  updateComments,\n}: NewCommentProps): JSX.Element => {\n  const [rating, setRating] = React.useState<number | null>();\n  const [comment, setComment] = React.useState<string>();\n  const { postReview }: NewCommentDispatchProps = useActions();\n  const formRef = createRef<HTMLFormElement>();\n\n  const MAX_RATING = 5;\n  const MIN_CHARACTERS = 50;\n  const ratingArr: string[] = new Array(MAX_RATING).fill(``);\n\n  const onChangeRating = React.useCallback(\n    (evt: React.FormEvent<HTMLInputElement>): void => {\n      const { value } = evt.currentTarget;\n      setRating(Number(value));\n    },\n    []\n  );\n\n  const onChangeText = React.useCallback(\n    (evt: React.FormEvent<HTMLTextAreaElement>): void => {\n      const { value } = evt.currentTarget;\n      setComment(value);\n    },\n    []\n  );\n\n  const onSubmitForm = React.useCallback(\n    (evt: React.FormEvent<HTMLFormElement>): void => {\n      evt.preventDefault();\n\n      const form = formRef.current;\n\n      if (comment && rating) {\n        postReview(comment, rating, id)\n          .then(({ data }: { data: Comment[] }) => updateComments(data))\n          .then(() => {\n            setRating(null);\n            setComment(``);\n            form?.reset();\n          });\n      }\n    },\n    [rating, comment]\n  );\n\n  return (\n    <form\n      className=\"reviews__form form\"\n      action=\"#\"\n      method=\"post\"\n      onSubmit={onSubmitForm}\n      ref={formRef}\n    >\n      <label className=\"reviews__label form__label\" htmlFor=\"review\">\n        Your review\n      </label>\n      <div className=\"reviews__rating-form form__rating\">\n        {ratingArr.map(\n          (_item: string, i: number, array: string[]): JSX.Element => (\n            <React.Fragment key={i}>\n              <input\n                className=\"form__rating-input visually-hidden\"\n                name=\"rating\"\n                value={array.length - i}\n                id={`${array.length - i}-stars`}\n                type=\"radio\"\n                onChange={onChangeRating}\n              />\n              <label\n                htmlFor={`${array.length - i}-stars`}\n                className=\"reviews__rating-label form__rating-label\"\n                title={ratingTitles.get(array.length - i)}\n              >\n                <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n                  <use xlinkHref=\"#icon-star\"></use>\n                </svg>\n              </label>\n            </React.Fragment>\n          )\n        )}\n      </div>\n      <textarea\n        className=\"reviews__textarea form__textarea\"\n        id=\"review\"\n        name=\"review\"\n        placeholder=\"Tell how was your stay, what you like and what can be improved\"\n        onChange={onChangeText}\n        value={comment}\n      ></textarea>\n      <div className=\"reviews__button-wrapper\">\n        <p className=\"reviews__help\">\n          To submit review please make sure to set\n          <span className=\"reviews__star\">rating</span> and describe your stay\n          with at least\n          <b className=\"reviews__text-amount\">50 characters</b>.\n        </p>\n        <button\n          className=\"reviews__submit form__submit button\"\n          type=\"submit\"\n          disabled={\n            comment && comment.length >= MIN_CHARACTERS && rating ? false : true\n          }\n        >\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n","import { Reviews } from \"../../types\";\nimport { calculateRating } from \"../../utils\";\nimport { Months } from \"../../const\";\n\ntype OwnProps = {\n  review: Reviews;\n};\n\nexport const Review = ({ review }: OwnProps) => {\n  const getDate = (date: Date): string => {\n    const formattedDate = new Date(Date.parse(String(date)));\n    const year = formattedDate.getFullYear();\n    const month = Months[formattedDate.getMonth()];\n    return `${month} ${year}`;\n  };\n\n  return (\n    <>\n      <div className=\"reviews__user user\">\n        <div className=\"reviews__avatar-wrapper user__avatar-wrapper\">\n          <img\n            className=\"reviews__avatar user__avatar\"\n            src={review.user.avatar_url}\n            width=\"54\"\n            height=\"54\"\n            alt=\"Reviews avatar\"\n          />\n        </div>\n        <span className=\"reviews__user-name\">{review.user.name}</span>\n      </div>\n      <div className=\"reviews__info\">\n        <div className=\"reviews__rating rating\">\n          <div className=\"reviews__stars rating__stars\">\n            <span\n              style={{ width: `${calculateRating(review.rating)}%` }}\n            ></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <p className=\"reviews__text\">{review.comment}</p>\n        <time\n          className=\"reviews__time\"\n          dateTime={String(review.date).slice(0, 10)}\n        >\n          {getDate(review.date)}\n        </time>\n      </div>\n    </>\n  );\n};\n","import { Reviews } from \"../../types\";\nimport { Review } from \"../Review/Review\";\n\ntype OwnProps = {\n  reviews: Reviews[];\n};\n\nexport const ReviewsList = ({ reviews }: OwnProps) => {\n  const quantityReviews = reviews.length;\n\n  return (\n    <>\n      <h2 className=\"reviews__title\">\n        Reviews &middot;{``}\n        <span className=\"reviews__amount\">{quantityReviews}</span>\n      </h2>\n      <ul className=\"reviews__list\">\n        {reviews.map(\n          (review: Reviews, i: number): JSX.Element => (\n            <li className=\"reviews__item\" key={i}>\n              <Review review={review} />\n            </li>\n          )\n        )}\n      </ul>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Hotel, Reviews } from \"../../types\";\nimport { calculateRating } from \"../../utils\";\nimport { OfferImage } from \"../OfferImage/OfferImage\";\nimport { NewComment } from \"../NewComment/NewComment\";\nimport { Map } from \"../Map/Map\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { AppRoute } from \"../../const\";\nimport { ReviewsList } from \"../ReviewsList/ReviewsList\";\nimport { OfferList } from \"../OfferList/OfferList\";\nimport { useTypedSelector } from \"../../hooks/useTypesSelector\";\n\ntype OwnProps = {\n  id: string;\n};\n\ntype AppDispatchProps = {\n  fetchReviews: Function; // ToDo: Разобраться как затипизировать\n  fetchNearbyHotels: Function;\n  updateFavoriteStatus: Function;\n  updateHotels: Function;\n};\n\nconst MAX_OFFER_IMAGES = 6;\nconst MAX_REVIEWS = 10;\n\nexport const Room = ({ id }: OwnProps): JSX.Element => {\n  const raiseOnTheTop = (): void => {\n    window.scrollTo(0, 0);\n  };\n\n  const [hotel, setHotel] = React.useState<Hotel>();\n  const [reviews, setReviews] = React.useState<Reviews[]>([]);\n  const [nearbyHotels, setNearbyHotels] = React.useState<Hotel[]>();\n  const {\n    fetchReviews,\n    fetchNearbyHotels,\n    updateFavoriteStatus,\n    updateHotels,\n  }: AppDispatchProps = useActions();\n  const { userName } = useTypedSelector((state) => state.user);\n  const { status } = useTypedSelector((state) => state.user);\n  const { hotels } = useTypedSelector((state) => state.hotels);\n  const history = useHistory();\n\n  const sortReviews = (reviewsList: Reviews[]): Reviews[] => {\n    return reviewsList\n      .sort(\n        (a: Reviews, b: Reviews): any =>\n          Date.parse(String(b.date)) - Date.parse(String(a.date))\n      )\n      .slice(0, MAX_REVIEWS);\n  };\n\n  React.useEffect((): void => {\n    raiseOnTheTop();\n    setHotel(hotels.find((hotel: Hotel): boolean => hotel.id === Number(id)));\n  }, [id]);\n\n  React.useEffect((): void => {\n    fetchReviews(id).then(({ data }: { data: Reviews[] }) => {\n      const sortedReviews = sortReviews(data);\n      setReviews(sortedReviews);\n    });\n  }, [id]);\n\n  React.useEffect((): void => {\n    fetchNearbyHotels(id).then(({ data }: { data: Hotel[] }) =>\n      setNearbyHotels(data)\n    );\n  }, [id]);\n\n  const updateComments = React.useCallback((comments) => {\n    const sortedReviews = sortReviews(comments);\n    setReviews(sortedReviews);\n  }, []);\n\n  const onBookmarkClick = React.useCallback((hotel: Hotel) => {\n    if (status === `AUTH`) {\n      hotel.is_favorite = !hotel.is_favorite;\n      updateFavoriteStatus(hotel).then(({ data }: { data: Hotel }) =>\n        updateHotels(data)\n      );\n    } else {\n      history.push(`/login`);\n    }\n  }, []);\n\n  if (!hotel) {\n    return <div>Hotel not found</div>;\n  }\n\n  const {\n    images,\n    title,\n    is_premium,\n    is_favorite,\n    rating,\n    type,\n    bedrooms,\n    max_adults,\n    price,\n    goods,\n    description,\n  } = hotel;\n\n  const { avatar_url, name, is_pro } = hotel.host;\n\n  const offerImages = images.slice(0, MAX_OFFER_IMAGES);\n\n  return (\n    <div className=\"page\">\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <div className=\"header__left\">\n              <Link className=\"header__logo-link\" to={AppRoute.ROOT}>\n                <img\n                  className=\"header__logo\"\n                  src=\"img/logo.svg\"\n                  alt=\"6 cities logo\"\n                  width=\"81\"\n                  height=\"41\"\n                />\n              </Link>\n            </div>\n            <nav className=\"header__nav\">\n              <ul className=\"header__nav-list\">\n                <li className=\"header__nav-item user\">\n                  <Link\n                    className=\"header__nav-link header__nav-link--profile\"\n                    to={\n                      status === `NO_AUTH` ? AppRoute.LOGIN : AppRoute.FAVORITES\n                    }\n                  >\n                    <div className=\"header__avatar-wrapper user__avatar-wrapper\"></div>\n                    {status === `NO_AUTH` ? (\n                      <span className=\"header__login\">Sign in</span>\n                    ) : (\n                      <span className=\"header__user-name user__name\">\n                        {userName}\n                      </span>\n                    )}\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"page__main page__main--property\">\n        <section className=\"property\">\n          <div className=\"property__gallery-container container\">\n            <div className=\"property__gallery\">\n              {offerImages.map(\n                (image: string, i: number): JSX.Element => (\n                  <OfferImage key={i} image={image} title={title} />\n                )\n              )}\n            </div>\n          </div>\n          <div className=\"property__container container\">\n            <div className=\"property__wrapper\">\n              {is_premium && (\n                <div className=\"property__mark\">\n                  <span>Premium</span>\n                </div>\n              )}\n              <div className=\"property__name-wrapper\">\n                <h1 className=\"property__name\">{title}</h1>\n                <button\n                  className={\n                    is_favorite\n                      ? `property__bookmark-button property__bookmark-button--active button`\n                      : `property__bookmark-button button`\n                  }\n                  type=\"button\"\n                  onClick={() => onBookmarkClick(hotel)}\n                >\n                  <svg\n                    className=\"property__bookmark-icon\"\n                    width=\"31\"\n                    height=\"33\"\n                  >\n                    <use xlinkHref=\"#icon-bookmark\"></use>\n                  </svg>\n                  <span className=\"visually-hidden\">To bookmarks</span>\n                </button>\n              </div>\n              <div className=\"property__rating rating\">\n                <div className=\"property__stars rating__stars\">\n                  <span style={{ width: `${calculateRating(rating)}%` }}></span>\n                  <span className=\"visually-hidden\">Rating</span>\n                </div>\n                <span className=\"property__rating-value rating__value\">\n                  {rating}\n                </span>\n              </div>\n              <ul className=\"property__features\">\n                <li className=\"property__feature property__feature--entire\">\n                  {type}\n                </li>\n                <li className=\"property__feature property__feature--bedrooms\">\n                  {bedrooms} Bedrooms\n                </li>\n                <li className=\"property__feature property__feature--adults\">\n                  Max {max_adults} adults\n                </li>\n              </ul>\n              <div className=\"property__price\">\n                <b className=\"property__price-value\">&euro;{price}</b>\n                <span className=\"property__price-text\">&nbsp;night</span>\n              </div>\n              <div className=\"property__inside\">\n                <h2 className=\"property__inside-title\">What&apos;s inside</h2>\n                <ul className=\"property__inside-list\">\n                  {goods.map(\n                    (good: string, i: number): JSX.Element => (\n                      <li key={i} className=\"property__inside-item\">\n                        {good}\n                      </li>\n                    )\n                  )}\n                </ul>\n              </div>\n              <div className=\"property__host\">\n                <h2 className=\"property__host-title\">Meet the host</h2>\n                <div className=\"property__host-user user\">\n                  <div\n                    className={\n                      is_pro\n                        ? `property__avatar-wrapper property__avatar-wrapper--pro user__avatar-wrapper`\n                        : `property__avatar-wrapper user__avatar-wrapper`\n                    }\n                  >\n                    <img\n                      className=\"property__avatar user__avatar\"\n                      src={avatar_url}\n                      width=\"74\"\n                      height=\"74\"\n                      alt=\"Host avatar\"\n                    />\n                  </div>\n                  <span className=\"property__user-name\">{name}</span>\n                </div>\n                <div className=\"property__description\">\n                  <p className=\"property__text\">{description}</p>\n                </div>\n              </div>\n              <section className=\"property__reviews reviews\">\n                <ReviewsList reviews={reviews} />\n                {status === `AUTH` && (\n                  <NewComment id={id} updateComments={updateComments} />\n                )}\n              </section>\n            </div>\n          </div>\n          <section className=\"property__map map\">\n            {nearbyHotels && (\n              <Map hotels={nearbyHotels} city={hotel.city.location} />\n            )}\n          </section>\n        </section>\n        <div className=\"container\">\n          <section className=\"near-places places\">\n            <h2 className=\"near-places__title\">\n              Other places in the neighbourhood\n            </h2>\n            {nearbyHotels && (\n              <OfferList\n                hotels={nearbyHotels}\n                classNameMainPage={`near-places__card place-card`}\n                classNameOfferPlace={`near-places__list places__list`}\n              />\n            )}\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport { Main } from \"../Main/Main\";\nimport { Login } from \"../Login/Login\";\nimport { Favorites } from \"../Favorites/Favorites\";\nimport { Room } from \"../Room/Room\";\nimport { AppRoute } from \"../../const\";\nimport { useActions } from \"../../hooks/useActions\";\n\ntype AppDispatchProps = {\n  fetchHotels: Function;\n  checkAuthAction: Function;\n};\n\nconst App = (): JSX.Element => {\n  const [loadingFlag, setLoadingFlag] = React.useState(true);\n  const { fetchHotels }: AppDispatchProps = useActions();\n  const { checkAuthAction }: AppDispatchProps = useActions();\n\n  React.useEffect((): void => {\n    Promise.all([fetchHotels(), checkAuthAction()]).then(() =>\n      setLoadingFlag(false)\n    );\n  }, []);\n\n  if (loadingFlag) {\n    return <div>LOADING...</div>;\n  }\n\n  return (\n    // <BrowserRouter basename=\"%PUBLIC_URL%/\">\n    <BrowserRouter>\n      <Switch>\n        <Route exact path={AppRoute.ROOT}>\n          <Main />\n        </Route>\n        <Route exact path={AppRoute.LOGIN}>\n          <Login />\n        </Route>\n        <Route exact path={AppRoute.FAVORITES}>\n          <Favorites />\n        </Route>\n        <Route\n          exact\n          path={`${AppRoute.OFFER}/:id`}\n          render={(offerProps: any) => <Room id={offerProps.match.params.id} />}\n        />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport { App };\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createApi } from \"./api\";\nimport { App } from \"./components/App/App\";\nimport rootReducer from \"./state/reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { actionCreators } from \"./state\";\n\nconst root = document.querySelector(`#root`);\n\nexport const api = createApi(() =>\n  store.dispatch(actionCreators.changeAuthStatus(`NO_AUTH`))\n);\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk.withExtraArgument(api))\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  root\n);\n","import axios, { AxiosInstance, AxiosResponse, AxiosError } from \"axios\";\n\nconst TIMEOUT = 5000;\nconst BACKEND_URL = `https://6.react.pages.academy/six-cities`;\nconst UNAUTHORIZED = 401;\n\nexport function createApi(onUnauthorized: () => void): AxiosInstance {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: TIMEOUT,\n    withCredentials: true,\n  });\n\n  const onSuccess = (response: AxiosResponse): AxiosResponse => response;\n\n  const onFail = (err: AxiosError): void => {\n    const response = err.response;\n\n    if (response && response.status === UNAUTHORIZED) {\n      onUnauthorized();\n\n      throw err;\n    }\n\n    throw err;\n  };\n\n  api.interceptors.response.use(onSuccess, onFail);\n\n  return api;\n}\n"],"sourceRoot":""}